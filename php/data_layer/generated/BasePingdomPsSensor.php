<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BasePingdomPsSensor extends Doctrine_Record
{

	public function setTableDefinition()
	{
		$this->setTableName('pingdom_ps_sensor');
		$this->hasColumn('id', 'integer', 4, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(10) unsigned', 'unsigned' => 1, 'values' =>  array(), 'primary' => true, 'notnull' => true, 'autoincrement' => true));
		$this->hasColumn('pingdom_sensor_id', 'integer', 4, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(10) unsigned', 'unsigned' => 1, 'values' =>  array(), 'primary' => false, 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('current_state_id', 'integer', 4, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(10) unsigned', 'unsigned' => 1, 'values' =>  array(), 'primary' => false, 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('type_id', 'integer', 4, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(10) unsigned', 'unsigned' => 1, 'values' =>  array(), 'primary' => false, 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('name', 'string', 512, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(512)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('target', 'string', 512, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(512)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('ip', 'string', 15, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(15)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('is_public', 'integer', 4, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(10) unsigned', 'unsigned' => 1, 'values' =>  array(), 'primary' => false, 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('deleted_in_pingdom', 'string', 3, array('alltypes' =>  array(  0 => 'string', ), 'ntype' => 'varchar(3)', 'fixed' => false, 'values' =>  array(), 'primary' => false, 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('next_state_update_time', 'integer', null, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(10) unsigned', 'values' =>  array(), 'primary' => false, 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('next_ip_resolving_time', 'integer', null, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(10) unsigned', 'values' =>  array(), 'primary' => false, 'notnull' => true, 'autoincrement' => false));
		$this->hasColumn('last_detected_down', 'integer', null, array('alltypes' =>  array(  0 => 'integer', ), 'ntype' => 'int(10) unsigned', 'values' =>  array(), 'primary' => false, 'notnull' => true, 'autoincrement' => false));
	}

	public function setUp(){		
		$this->hasMany('PingdomPsSensorGroup as SensorGroups', array('local'=>'id',
												'foreign' => 'sensor_id'));
		
		$this->hasOne('PingdomPsType as Type', array('local'=>'type_id', 'foreign'=>'id'));
		$this->hasOne('PingdomPsStateType as State', array('local'=>'current_state_id', 'foreign'=>'id'));
	}
}